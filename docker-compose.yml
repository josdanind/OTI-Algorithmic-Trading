version: '3'

services:
  proxy:
    image: traefik:v2.8
    container_name: app-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./services/traefik/traefik.toml:/etc/traefik/traefik.toml

  bot-api:
    build:
      context: ./services/api
    container_name: bot-api
    restart: always
    environment:
      - APP_VERSION=${APP_VERSION}
      # URL Postgres
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASS}@bot-db:${DB_PORT}/${DB_NAME}
      # Root User
      - ROOT_USERNAME=${ROOT_USERNAME}
      - ROOT_EMAIL=${ROOT_EMAIL}
      - ROOT_DATA=${ROOT_DATA}
      - ROOT_PASS=${ROOT_PASS}
      # JWT 
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_DAYS=${ACCESS_TOKEN_EXPIRE_DAYS}
    volumes:
      - ./services/api:/oti-api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`fastapi.app.test`)"
    depends_on:
      - bot-db

  bot-db:
    image: postgres:14.4
    container_name: bot-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}

volumes:
  postgres_data: